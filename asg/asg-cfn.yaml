AWSTemplateFormatVersion: 2010-09-09
Description: |
  Autoscaling group with load balancer and policy
Parameters:
  pSubnetList:
    Description: List of subnets
    Type: List<AWS::EC2::Subnet::Id>

  pVpcId:
    Description: VPC where targets are registered
    Type: AWS::EC2::VPC::Id

  pKeypair:
    Description: Keypair for EC2 instances
    Type: AWS::EC2::KeyPair::KeyName
  
  pImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

Resources:
  rLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP
      GroupName: lb-enable-http
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          ToPort: 80
          FromPort: 80
          IpProtocol: tcp

  rLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Name: AbdulALB
      Scheme: internet-facing
      IpAddressType: ipv4
      SecurityGroups: 
        - !GetAtt rLoadBalancerSecurityGroup.GroupId
      Subnets: !Ref pSubnetList
    
  rListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref rLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref rTargetGroup

  rTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: abdul-tg
      Protocol: HTTP
      Port: 80
      VpcId: !Ref pVpcId
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 30

  rInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH
      GroupName: lb-enable-http-and-ssh
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          ToPort: 80
          FromPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          ToPort: 22
          FromPort: 22
          IpProtocol: tcp

  rLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: abdullaunchtemplate
      VersionDescription: version 1
      LaunchTemplateData: 
        ImageId: !Ref pImageId
        InstanceType: t2.micro
        KeyName: !Ref pKeypair
        SecurityGroupIds: 
          - !GetAtt rInstanceSecurityGroup.GroupId
        UserData: !Base64 |
          #!/bin/bash

          # update os
          yum update -y

          # install apache server
          yum install -y httpd

          # get private ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`

          # get public ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 

          # get date and time of server
          DATE_TIME=`date`

          # set all permissions
          chmod -R 777 /var/www/html

          # create a custom index.html file
          echo "<html>
              <head>
              <title> Application Load Balancer</title>
              </head>
              <body>
                  <h1>Testing Application Load Balancer</h1>
                  <h2>Congratulations! You have created an instance from Launch Template</h2>
                  <h3>This web server is launched from the launch template by ABDUL</h3>
                  <p>This instance is created at <b>$DATE_TIME</b></p>
                  <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                  <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
              </body>
              </html>" > /var/www/html/index.html

          # start apache server
          systemctl start httpd
          systemctl enable httpd

  rAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref rLaunchTemplate
        Version: "1"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      TargetGroupARNs:
        - !Ref rTargetGroup
      VPCZoneIdentifier: !Ref pSubnetList
      DesiredCapacity: "2"
      MaxSize: "3"
      MinSize: "2"

  rAsgPolciy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref rAutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0
#Outputs: